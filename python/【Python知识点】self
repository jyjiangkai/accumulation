##前言
最近花了一天时间看了下python语法，对python中self的用法理解的还不是很清楚，于是专门研究了一下。

##self到底是干啥的？
Python编写类的时候，每个函数参数第一个参数都是self，一开始我不管它到底是干嘛的，只知道必须要写上。后来对Python渐渐熟悉了一点，再回头看self的概念，
似乎有点弄明白了。

首先明确的是self只有在类的方法中才会有，独立的函数或方法是不必带有self的。self在定义类的方法时是必须有的，但是在调用时不必传入该参数。

self指的是类实例对象本身(注意：不是类本身)。为什么这么说呢？因为如果self指向类本身，那么当有多个类实例对象时，self指向哪一个呢？所以self是指的类实例
对象。

##self主要应用场景是什么？
首先看下面这个例子：
```
class Person:
    var = 0    #类变量
    def _init_(self, name):
        self.name = name    #实例变量
    def sayhello(self):
        print(self.name)
```
从上面例子可以看出来，self主要是用来创建实例变量的，但是从之前看的语法当中，类中已经有了类变量了，为什么还需要实例变量呢，为什么不能全部使用类变量呢，
这里就需要了解一下类变量和实例变量的差别和各自的应用场景

##类变量和实例变量的差异
在Python Tutorial中对于类变量和实例变量是这样描述的：
"Generally speaking, instance variables are for data unique to each instance and class variables are for attributes and methods shared 
by all instances of the class"
通常来说，实例变量是对于每个实例都独有的数据，而类变量是该类所有实例共享的属性和方法。

所以可以理解为类变量是所有实例共享的，而实例变量为每个实例独有的。
为了验证这个结论，实现了下面这个例子：
```
class A:
    a = 0
    def __init__(self, b):
        self.b = b
    
    def add(self):
        A.a += 1
        self.a += 10
        self.b += 100
        print(A.a, " ", self.a, " ", self.b)
    
    def show(self):
        print(A.a, " ", self.a, " ", self.b)
        
v1 = A(0)
v2 = A(0)

v1.add()    #我们可以猜测下这里会打印出什么呢
v2.add()    #我们可以猜测下这里会打印出什么呢

v1.show()    #我们可以猜测下这里会打印出什么呢
v2.show()    #我们可以猜测下这里会打印出什么呢
```

执行结果如下：
```
1   11   100
2   12   100
2   11   100
2   12   100
```

从上述代码可以看出，类A有一个类变量a和一个实例变量b，我们创建了两个类实例对象，分别是v1和v2。

首先通过类实例对象v1调用add函数，则此时A.a等于1；可是v1中的self.a呢，self.a是不存在的啊，没有这个实例变量啊，但是存在a这个类变量，通过下面打印的结果来看
可以发现self.a等于11了，所以刚开始的时候self.a等于1，和类变量A.a相同，也就可以可以理解为刚开始self.a就是A.a；再然后v1的self.b等于100。

然后通过类实例对象v2调用add函数，则此时A.a等于2，这时候就可以说明A.a前面已经被v1.add()加1了，所以现在是2，验证了类变量A.a是被类实例v1和v2共用的；
然后再看到v2中的self.a，self.a也是不存在的，从结果可以看出v2的self.a等于12，说明v2的self.a等于A.a（2）+ 10，所以等于12；再然后v2的self.b等于100。

接下来调用v1.show()，可以看到A.a等于2，进一步验证了类变量是所有类实例对象共用的。
然后v1的self.a等于11而v2的self.a等于12，这里说明了self.a已经变成了各自类实例对象的实例变量了，所以不是公共的，是各自独有的，所以是不一样的。而在
刚开始还没有self.a的时候，self.a是等于类变量A.a等，一旦赋值定义后，就作为该类实例对象的实例变量了。

v1和v2的self.b也是类实例变量，各自加了100。

至此可以看出类变量是所有实例共享的，而实例变量为每个实例独有的。
